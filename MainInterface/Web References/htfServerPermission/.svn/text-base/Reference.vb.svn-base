'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.0.3705.0
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 1.0.3705.0 版自动生成。
'
Namespace htfServerPermission
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PermissionSoap", [Namespace]:="http://iLOOK100.net/WebServices/Permission")>  _
    Public Class Permission
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Public AuthenticationHeaderValue As AuthenticationHeader
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/webservice_cgmis/permission.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/LoginByAuthenticationHeader", RequestElementName:="LoginByAuthenticationHeader", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="LoginByAuthenticationHeaderResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function Login() As <System.Xml.Serialization.XmlElementAttribute("LoginByAuthenticationHeaderResult")> Boolean
            Dim results() As Object = Me.Invoke("Login", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginLogin(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Login", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndLogin(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="Login1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/Login", RequestElementName:="Login", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="LoginResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function Login(ByVal userName As String, ByVal password As String) As <System.Xml.Serialization.XmlElementAttribute("LoginResult")> Boolean
            Dim results() As Object = Me.Invoke("Login1", New Object() {userName, password})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginLogin1(ByVal userName As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Login1", New Object() {userName, password}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndLogin1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="Login2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/LoginEx", RequestElementName:="LoginEx", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="LoginExResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function Login(ByVal userName As String, ByVal password As String, ByVal system As String) As <System.Xml.Serialization.XmlElementAttribute("LoginExResult")> Boolean
            Dim results() As Object = Me.Invoke("Login2", New Object() {userName, password, system})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginLogin2(ByVal userName As String, ByVal password As String, ByVal system As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Login2", New Object() {userName, password, system}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndLogin2(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/Logout", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Logout()
            Me.Invoke("Logout", New Object(-1) {})
        End Sub
        
        '<remarks/>
        Public Function BeginLogout(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Logout", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Sub EndLogout(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/Exists", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Exists(ByVal userID As Object) As Boolean
            Dim results() As Object = Me.Invoke("Exists", New Object() {userID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginExists(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Exists", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndExists(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/IsLogin", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsLogin() As Boolean
            Dim results() As Object = Me.Invoke("IsLogin", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginIsLogin(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsLogin", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsLogin(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/IsFixed", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function IsFixed() As Boolean
            Dim results() As Object = Me.Invoke("IsFixed", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginIsFixed(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsFixed", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsFixed(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="IsFixed1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/IsFixed_1", RequestElementName:="IsFixed_1", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="IsFixed_1Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function IsFixed(ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("IsFixed_1Result")> Boolean
            Dim results() As Object = Me.Invoke("IsFixed1", New Object() {userID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginIsFixed1(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsFixed1", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsFixed1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="IsFixed2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/IsFixed_2", RequestElementName:="IsFixed_2", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="IsFixed_2Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function IsFixed(ByVal userID As Object, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("IsFixed_2Result")> Boolean
            Dim results() As Object = Me.Invoke("IsFixed2", New Object() {userID, level})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginIsFixed2(ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsFixed2", New Object() {userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsFixed2(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="IsFixed3"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/IsFixed_3", RequestElementName:="IsFixed_3", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="IsFixed_3Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function IsFixed(ByVal fixedID As FixedRoleEnum) As <System.Xml.Serialization.XmlElementAttribute("IsFixed_3Result")> Boolean
            Dim results() As Object = Me.Invoke("IsFixed3", New Object() {fixedID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginIsFixed3(ByVal fixedID As FixedRoleEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsFixed3", New Object() {fixedID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsFixed3(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="IsFixed4"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/IsFixed_4", RequestElementName:="IsFixed_4", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="IsFixed_4Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function IsFixed(ByVal userID As Object, ByVal fixedID As FixedRoleEnum) As <System.Xml.Serialization.XmlElementAttribute("IsFixed_4Result")> Boolean
            Dim results() As Object = Me.Invoke("IsFixed4", New Object() {userID, fixedID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginIsFixed4(ByVal userID As Object, ByVal fixedID As FixedRoleEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsFixed4", New Object() {userID, fixedID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsFixed4(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="IsFixed5"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/IsFixed_5", RequestElementName:="IsFixed_5", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="IsFixed_5Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function IsFixed(ByVal userID As Object, ByVal fixedID As FixedRoleEnum, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("IsFixed_5Result")> Boolean
            Dim results() As Object = Me.Invoke("IsFixed5", New Object() {userID, fixedID, level})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginIsFixed5(ByVal userID As Object, ByVal fixedID As FixedRoleEnum, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsFixed5", New Object() {userID, fixedID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndIsFixed5(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/VerifyLogin", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function VerifyLogin(ByVal userID As Object, ByVal password As String) As Boolean
            Dim results() As Object = Me.Invoke("VerifyLogin", New Object() {userID, password})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginVerifyLogin(ByVal userID As Object, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerifyLogin", New Object() {userID, password}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndVerifyLogin(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="VerifyLogin1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/VerifyLoginEx", RequestElementName:="VerifyLoginEx", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="VerifyLoginExResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function VerifyLogin(ByVal userID As Object, ByVal password As String, ByVal system As String) As <System.Xml.Serialization.XmlElementAttribute("VerifyLoginExResult")> Boolean
            Dim results() As Object = Me.Invoke("VerifyLogin1", New Object() {userID, password, system})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginVerifyLogin1(ByVal userID As Object, ByVal password As String, ByVal system As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerifyLogin1", New Object() {userID, password, system}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndVerifyLogin1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/AddMember", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function AddMember(ByVal roleID As Object, ByVal userID As Object, ByVal createDate As Date) As Boolean
            Dim results() As Object = Me.Invoke("AddMember", New Object() {roleID, userID, createDate})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginAddMember(ByVal roleID As Object, ByVal userID As Object, ByVal createDate As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddMember", New Object() {roleID, userID, createDate}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAddMember(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="AddMember1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/AddMember_1", RequestElementName:="AddMember_1", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="AddMember_1Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function AddMember(ByVal roleID As Object, ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("AddMember_1Result")> Boolean
            Dim results() As Object = Me.Invoke("AddMember1", New Object() {roleID, userID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginAddMember1(ByVal roleID As Object, ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddMember1", New Object() {roleID, userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAddMember1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/AddRole", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddRole(ByVal name As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String, ByVal createDate As Date) As Integer
            Dim results() As Object = Me.Invoke("AddRole", New Object() {name, fullName, description, masterNo, createDate})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginAddRole(ByVal name As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String, ByVal createDate As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddRole", New Object() {name, fullName, description, masterNo, createDate}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAddRole(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/AddUser", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddUser(ByVal name As String, ByVal password As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String, ByVal createDate As Date, ByVal firstChange As Boolean, ByVal canotChange As Boolean, ByVal accountAlway As Boolean, ByVal accountPause As Boolean) As Integer
            Dim results() As Object = Me.Invoke("AddUser", New Object() {name, password, fullName, description, masterNo, createDate, firstChange, canotChange, accountAlway, accountPause})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginAddUser(ByVal name As String, ByVal password As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String, ByVal createDate As Date, ByVal firstChange As Boolean, ByVal canotChange As Boolean, ByVal accountAlway As Boolean, ByVal accountPause As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddUser", New Object() {name, password, fullName, description, masterNo, createDate, firstChange, canotChange, accountAlway, accountPause}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAddUser(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetFixedID", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetFixedID(ByVal userID As Object, ByVal level As Integer) As FixedRoleEnum
            Dim results() As Object = Me.Invoke("GetFixedID", New Object() {userID, level})
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        Public Function BeginGetFixedID(ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFixedID", New Object() {userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFixedID(ByVal asyncResult As System.IAsyncResult) As FixedRoleEnum
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetFixedID1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetFixedID_1", RequestElementName:="GetFixedID_1", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetFixedID_1Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetFixedID(ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("GetFixedID_1Result")> FixedRoleEnum
            Dim results() As Object = Me.Invoke("GetFixedID1", New Object() {userID})
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        Public Function BeginGetFixedID1(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFixedID1", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFixedID1(ByVal asyncResult As System.IAsyncResult) As FixedRoleEnum
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetFixedID2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetFixedID_2", RequestElementName:="GetFixedID_2", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetFixedID_2Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetFixedID(ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetFixedID_2Result")> FixedRoleEnum
            Dim results() As Object = Me.Invoke("GetFixedID2", New Object() {level})
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        Public Function BeginGetFixedID2(ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFixedID2", New Object() {level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFixedID2(ByVal asyncResult As System.IAsyncResult) As FixedRoleEnum
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetFixedID3"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetFixedID_3", RequestElementName:="GetFixedID_3", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetFixedID_3Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetFixedID() As <System.Xml.Serialization.XmlElementAttribute("GetFixedID_3Result")> FixedRoleEnum
            Dim results() As Object = Me.Invoke("GetFixedID3", New Object(-1) {})
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        Public Function BeginGetFixedID3(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFixedID3", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFixedID3(ByVal asyncResult As System.IAsyncResult) As FixedRoleEnum
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),FixedRoleEnum)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetUserID_Current", RequestElementName:="GetUserID_Current", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetUserID_CurrentResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetUserID() As <System.Xml.Serialization.XmlElementAttribute("GetUserID_CurrentResult")> Integer
            Dim results() As Object = Me.Invoke("GetUserID", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetUserID(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserID", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetUserID(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetUserID1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetUserID", RequestElementName:="GetUserID", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetUserIDResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetUserID(ByVal userName As Object) As <System.Xml.Serialization.XmlElementAttribute("GetUserIDResult")> Integer
            Dim results() As Object = Me.Invoke("GetUserID1", New Object() {userName})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetUserID1(ByVal userName As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserID1", New Object() {userName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetUserID1(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetUserName", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserName(ByVal userID As Object) As String
            Dim results() As Object = Me.Invoke("GetUserName", New Object() {userID})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginGetUserName(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserName", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetUserName(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetUserInfoAll", RequestElementName:="GetUserInfoAll", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetUserInfoAllResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetUserInfo() As <System.Xml.Serialization.XmlElementAttribute("GetUserInfoAllResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserInfo", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetUserInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserInfo", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetUserInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetUserInfo1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetUserInfo", RequestElementName:="GetUserInfo", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetUserInfoResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetUserInfo(ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("GetUserInfoResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserInfo1", New Object() {userID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetUserInfo1(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserInfo1", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetUserInfo1(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetMember", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMember(ByVal direction As DirectionEnum, ByVal userID As Object, ByVal level As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMember", New Object() {direction, userID, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetMember(ByVal direction As DirectionEnum, ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMember", New Object() {direction, userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetMember(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetRolesAll", RequestElementName:="GetRolesAll", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetRolesAllResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetRoles() As <System.Xml.Serialization.XmlElementAttribute("GetRolesAllResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRoles", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetRoles(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRoles", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetRoles(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetRoles1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetRoles", RequestElementName:="GetRoles", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetRolesResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetRoles(ByVal userID As Object, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetRolesResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRoles1", New Object() {userID, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetRoles1(ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRoles1", New Object() {userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetRoles1(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetUsersAll", RequestElementName:="GetUsersAll", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetUsersAllResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetUsers() As <System.Xml.Serialization.XmlElementAttribute("GetUsersAllResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUsers", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetUsers(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUsers", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetUsers(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetUsers1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetUsers", RequestElementName:="GetUsers", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetUsersResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetUsers(ByVal roleID As Object, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetUsersResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUsers1", New Object() {roleID, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetUsers1(ByVal roleID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUsers1", New Object() {roleID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetUsers1(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermissionAll", RequestElementName:="FetchPermissionAll", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermissionAllResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission() As <System.Xml.Serialization.XmlElementAttribute("FetchPermissionAllResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_1", RequestElementName:="FetchPermission_1", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_1Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_1Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission1", New Object() {userID, protect, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission1(ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission1", New Object() {userID, protect, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission1(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_2", RequestElementName:="FetchPermission_2", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_2Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal userID As Object, ByVal protect As ProtectEnum) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_2Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission2", New Object() {userID, protect})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission2(ByVal userID As Object, ByVal protect As ProtectEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission2", New Object() {userID, protect}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission2(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission3"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_3", RequestElementName:="FetchPermission_3", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_3Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal userID As Object, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_3Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission3", New Object() {userID, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission3(ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission3", New Object() {userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission3(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission4"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_4", RequestElementName:="FetchPermission_4", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_4Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_4Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission4", New Object() {userID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission4(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission4", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission4(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission5"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_5", RequestElementName:="FetchPermission_5", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_5Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_5Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission5", New Object() {formID, userID, protect, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission5(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission5", New Object() {formID, userID, protect, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission5(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission6"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_6", RequestElementName:="FetchPermission_6", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_6Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_6Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission6", New Object() {formID, userID, protect})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission6(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission6", New Object() {formID, userID, protect}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission6(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission7"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_7", RequestElementName:="FetchPermission_7", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_7Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal formID As Integer, ByVal userID As Object, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_7Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission7", New Object() {formID, userID, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission7(ByVal formID As Integer, ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission7", New Object() {formID, userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission7(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission8"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_8", RequestElementName:="FetchPermission_8", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_8Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal formID As Integer, ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_8Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission8", New Object() {formID, userID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission8(ByVal formID As Integer, ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission8", New Object() {formID, userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission8(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission9"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_9", RequestElementName:="FetchPermission_9", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_9Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal formID As Integer, ByVal protect As ProtectEnum, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_9Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission9", New Object() {formID, protect, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission9(ByVal formID As Integer, ByVal protect As ProtectEnum, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission9", New Object() {formID, protect, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission9(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission10"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_10", RequestElementName:="FetchPermission_10", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_10Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal formID As Integer, ByVal protect As ProtectEnum) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_10Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission10", New Object() {formID, protect})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission10(ByVal formID As Integer, ByVal protect As ProtectEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission10", New Object() {formID, protect}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission10(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchPermission11"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchPermission_11", RequestElementName:="FetchPermission_11", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchPermission_11Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchPermission(ByVal formID As Integer) As <System.Xml.Serialization.XmlElementAttribute("FetchPermission_11Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchPermission11", New Object() {formID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchPermission11(ByVal formID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchPermission11", New Object() {formID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchPermission11(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermission_1", RequestElementName:="GetPermission_1", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermission_1Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermission(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetPermission_1Result")> Integer
            Dim results() As Object = Me.Invoke("GetPermission", New Object() {formID, userID, protect, level})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermission(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermission", New Object() {formID, userID, protect, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermission(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetPermission1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermission_2", RequestElementName:="GetPermission_2", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermission_2Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermission(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum) As <System.Xml.Serialization.XmlElementAttribute("GetPermission_2Result")> Integer
            Dim results() As Object = Me.Invoke("GetPermission1", New Object() {formID, userID, protect})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermission1(ByVal formID As Integer, ByVal userID As Object, ByVal protect As ProtectEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermission1", New Object() {formID, userID, protect}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermission1(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetPermission2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermission_3", RequestElementName:="GetPermission_3", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermission_3Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermission(ByVal formID As Integer, ByVal userID As Object, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetPermission_3Result")> Integer
            Dim results() As Object = Me.Invoke("GetPermission2", New Object() {formID, userID, level})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermission2(ByVal formID As Integer, ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermission2", New Object() {formID, userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermission2(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetPermission3"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermission_4", RequestElementName:="GetPermission_4", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermission_4Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermission(ByVal formID As Integer, ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("GetPermission_4Result")> Integer
            Dim results() As Object = Me.Invoke("GetPermission3", New Object() {formID, userID})
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermission3(ByVal formID As Integer, ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermission3", New Object() {formID, userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermission3(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermissionSetAll", RequestElementName:="GetPermissionSetAll", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermissionSetAllResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermissionSet() As <System.Xml.Serialization.XmlElementAttribute("GetPermissionSetAllResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPermissionSet", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermissionSet(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermissionSet", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermissionSet(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetPermissionSet1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermissionSet_1", RequestElementName:="GetPermissionSet_1", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermissionSet_1Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermissionSet(ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetPermissionSet_1Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPermissionSet1", New Object() {userID, protect, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermissionSet1(ByVal userID As Object, ByVal protect As ProtectEnum, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermissionSet1", New Object() {userID, protect, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermissionSet1(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetPermissionSet2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermissionSet_2", RequestElementName:="GetPermissionSet_2", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermissionSet_2Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermissionSet(ByVal userID As Object, ByVal protect As ProtectEnum) As <System.Xml.Serialization.XmlElementAttribute("GetPermissionSet_2Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPermissionSet2", New Object() {userID, protect})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermissionSet2(ByVal userID As Object, ByVal protect As ProtectEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermissionSet2", New Object() {userID, protect}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermissionSet2(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetPermissionSet3"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermissionSet_3", RequestElementName:="GetPermissionSet_3", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermissionSet_3Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermissionSet(ByVal userID As Object, ByVal level As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetPermissionSet_3Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPermissionSet3", New Object() {userID, level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermissionSet3(ByVal userID As Object, ByVal level As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermissionSet3", New Object() {userID, level}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermissionSet3(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="GetPermissionSet4"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetPermissionSet_4", RequestElementName:="GetPermissionSet_4", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="GetPermissionSet_4Response", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetPermissionSet(ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("GetPermissionSet_4Result")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPermissionSet4", New Object() {userID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetPermissionSet4(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPermissionSet4", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetPermissionSet4(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/GetTopmost", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTopmost() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTopmost", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginGetTopmost(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTopmost", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetTopmost(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/RemoveMemberAll", RequestElementName:="RemoveMemberAll", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="RemoveMemberAllResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function RemoveMember(ByVal roleID As Object) As <System.Xml.Serialization.XmlElementAttribute("RemoveMemberAllResult")> Boolean
            Dim results() As Object = Me.Invoke("RemoveMember", New Object() {roleID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginRemoveMember(ByVal roleID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RemoveMember", New Object() {roleID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndRemoveMember(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="RemoveMember1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/RemoveMember", RequestElementName:="RemoveMember", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="RemoveMemberResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function RemoveMember(ByVal roleID As Object, ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("RemoveMemberResult")> Boolean
            Dim results() As Object = Me.Invoke("RemoveMember1", New Object() {roleID, userID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginRemoveMember1(ByVal roleID As Object, ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RemoveMember1", New Object() {roleID, userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndRemoveMember1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/RemoveUser", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoveUser(ByVal userID As Object) As Boolean
            Dim results() As Object = Me.Invoke("RemoveUser", New Object() {userID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginRemoveUser(ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RemoveUser", New Object() {userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndRemoveUser(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/SetPassword", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SetPassword(ByVal newPassword As String, ByVal oldPassword As String, ByVal userID As Object) As Boolean
            Dim results() As Object = Me.Invoke("SetPassword", New Object() {newPassword, oldPassword, userID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginSetPassword(ByVal newPassword As String, ByVal oldPassword As String, ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetPassword", New Object() {newPassword, oldPassword, userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetPassword(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="SetPassword1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/SetPasswordCurrent", RequestElementName:="SetPasswordCurrent", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="SetPasswordCurrentResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SetPassword(ByVal newPassword As String, ByVal oldPassword As String) As <System.Xml.Serialization.XmlElementAttribute("SetPasswordCurrentResult")> Boolean
            Dim results() As Object = Me.Invoke("SetPassword1", New Object() {newPassword, oldPassword})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginSetPassword1(ByVal newPassword As String, ByVal oldPassword As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetPassword1", New Object() {newPassword, oldPassword}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetPassword1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/UpdatePermission", RequestElementName:="UpdatePermission", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="UpdatePermissionResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SetPermission(ByVal permissionDataSet As System.Data.DataSet) As <System.Xml.Serialization.XmlElementAttribute("UpdatePermissionResult")> Boolean
            Dim results() As Object = Me.Invoke("SetPermission", New Object() {permissionDataSet})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginSetPermission(ByVal permissionDataSet As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetPermission", New Object() {permissionDataSet}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetPermission(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="SetPermission1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/SetPermission", RequestElementName:="SetPermission", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="SetPermissionResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SetPermission(ByVal permission As PermissionEnum, ByVal formID As Integer, ByVal protect As ProtectEnum, ByVal userID As Object) As <System.Xml.Serialization.XmlElementAttribute("SetPermissionResult")> Boolean
            Dim results() As Object = Me.Invoke("SetPermission1", New Object() {permission, formID, protect, userID})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginSetPermission1(ByVal permission As PermissionEnum, ByVal formID As Integer, ByVal protect As ProtectEnum, ByVal userID As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetPermission1", New Object() {permission, formID, protect, userID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetPermission1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="SetPermission2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/SetPermissionCurrent", RequestElementName:="SetPermissionCurrent", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="SetPermissionCurrentResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SetPermission(ByVal permission As PermissionEnum, ByVal formID As Integer, ByVal protect As ProtectEnum) As <System.Xml.Serialization.XmlElementAttribute("SetPermissionCurrentResult")> Boolean
            Dim results() As Object = Me.Invoke("SetPermission2", New Object() {permission, formID, protect})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginSetPermission2(ByVal permission As PermissionEnum, ByVal formID As Integer, ByVal protect As ProtectEnum, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetPermission2", New Object() {permission, formID, protect}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetPermission2(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/SetUserInfo", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SetUserInfo(ByVal oldName As Object, ByVal newName As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String, ByVal firstChange As Boolean, ByVal canotChange As Boolean, ByVal accountAlway As Boolean, ByVal accountPause As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("SetUserInfo", New Object() {oldName, newName, fullName, description, masterNo, firstChange, canotChange, accountAlway, accountPause})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginSetUserInfo(ByVal oldName As Object, ByVal newName As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String, ByVal firstChange As Boolean, ByVal canotChange As Boolean, ByVal accountAlway As Boolean, ByVal accountPause As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetUserInfo", New Object() {oldName, newName, fullName, description, masterNo, firstChange, canotChange, accountAlway, accountPause}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetUserInfo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="SetUserInfo1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/SetUserInfoSimple", RequestElementName:="SetUserInfoSimple", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="SetUserInfoSimpleResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SetUserInfo(ByVal oldName As Object, ByVal newName As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String) As <System.Xml.Serialization.XmlElementAttribute("SetUserInfoSimpleResult")> Boolean
            Dim results() As Object = Me.Invoke("SetUserInfo1", New Object() {oldName, newName, fullName, description, masterNo})
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        Public Function BeginSetUserInfo1(ByVal oldName As Object, ByVal newName As String, ByVal fullName As String, ByVal description As String, ByVal masterNo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetUserInfo1", New Object() {oldName, newName, fullName, description, masterNo}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetUserInfo1(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchFormAll", RequestElementName:="FetchFormAll", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchFormAllResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchForm() As <System.Xml.Serialization.XmlElementAttribute("FetchFormAllResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchForm", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchForm(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchForm", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchForm(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.InOut),  _
         System.Web.Services.WebMethodAttribute(MessageName:="FetchForm1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://iLOOK100.net/WebServices/Permission/FetchForm", RequestElementName:="FetchForm", RequestNamespace:="http://iLOOK100.net/WebServices/Permission", ResponseElementName:="FetchFormResponse", ResponseNamespace:="http://iLOOK100.net/WebServices/Permission", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function FetchForm(ByVal formID As Integer) As <System.Xml.Serialization.XmlElementAttribute("FetchFormResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("FetchForm1", New Object() {formID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '<remarks/>
        Public Function BeginFetchForm1(ByVal formID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FetchForm1", New Object() {formID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFetchForm1(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://iLOOK100.net/WebServices/Permission"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://iLOOK100.net/WebServices/Permission", IsNullable:=false)>  _
    Public Class AuthenticationHeader
        Inherits SoapHeader
        
        '<remarks/>
        Public UserName As String
        
        '<remarks/>
        Public Password As String
        
        '<remarks/>
        Public System As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://iLOOK100.net/WebServices/Permission"),  _
     System.FlagsAttribute()>  _
    Public Enum FixedRoleEnum
        
        '<remarks/>
        Administrator = 1
        
        '<remarks/>
        Administrators = 2
        
        '<remarks/>
        Authors = 4
        
        '<remarks/>
        Readers = 8
        
        '<remarks/>
        Security = 16
        
        '<remarks/>
        Setting = 32
    End Enum
    
    '<remarks/>
    <System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://iLOOK100.net/WebServices/Permission")>  _
    Public Enum DirectionEnum
        
        '<remarks/>
        UpSearch
        
        '<remarks/>
        DownSearch
    End Enum
    
    '<remarks/>
    <System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://iLOOK100.net/WebServices/Permission")>  _
    Public Enum ProtectEnum
        
        '<remarks/>
        RevokeProtect
        
        '<remarks/>
        GrantProtect
        
        '<remarks/>
        DenyProtect
    End Enum
    
    '<remarks/>
    <System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://iLOOK100.net/WebServices/Permission"),  _
     System.FlagsAttribute()>  _
    Public Enum PermissionEnum
        
        '<remarks/>
        FetchPermission = 1
        
        '<remarks/>
        AddNewPermission = 2
        
        '<remarks/>
        UpdatePermission = 4
        
        '<remarks/>
        DeletePermission = 8
        
        '<remarks/>
        PrintPermission = 16
        
        '<remarks/>
        FlowPermission = 32
        
        '<remarks/>
        VoidPermission = 64
    End Enum
End Namespace
